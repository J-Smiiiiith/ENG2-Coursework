[% var className = cond.name.replaceAll("[^a-zA-Z0-9]", ""); %]
[% var productNames = cond.applicableProducts.collect(p | '"' + p.name + '"'); %]
package uk.ac.york.eng2.products.resources.offers.generated.conditions.quantity;

import java.util.Arrays;
import java.util.List;
import java.util.Map;

/**
 * Auto-generated condition handler for condition: [%=cond.name%]
 */
public class [%=className%] {

	private List<String> applicableProducts;
	private int minQuantity;
	
	public [%=className%]() {
		this.applicableProducts = Arrays.asList([% for (i in 0.to(productNames.size() - 1)) { %]
[%=productNames.get(i)%][% if (i < productNames.size() - 1) { %], [% } %]
[% } %]);
		this.minQuantity = [%=cond.quantity%];
	}
	
	public boolean checkCondition(Map<String, Integer> order) {
		int count = 0;

	    for (String product : applicableProducts) {
	        if (order.containsKey(product)) {
	            count += order.get(product);
	        }
	    }
	    
	    return count >= minQuantity;
	}

    public String getConditionName() {
        return "[%=cond.name%]";
    }
}