[% var className = rule.name.replaceAll("[^a-zA-Z0-9]", ""); %]
[% var triggers = rule.triggers; %]

package uk.ac.york.eng2.products.resources.offers.generated.rules;

import uk.ac.york.eng2.products.resources.offers.src.OfferPricingContext;
import java.util.Map;

[%for (c in rule.conditions) { 
   var CondClassName = c.name.replaceAll("[^a-zA-Z0-9]", "");
%]
import uk.ac.york.eng2.products.resources.offers.generated.conditions.[%=CondClassName%];
[% } %]

[%for (o in rule.offers) { 
   var OfferClassName = o.name.replaceAll("[^a-zA-Z0-9]", "");
%]
import uk.ac.york.eng2.products.resources.offers.generated.offers.[%=OfferClassName%];
[% } %]

/**
 * Auto-generated offer handler for rule: [%=rule.name%]
 */
public class [%=className%] {

	public OfferPricingContext pricingContext;
	
	public [%=className%](OfferPricingContext pricingContext) {
		this.pricingContext = pricingContext;
	}

	public boolean isOfferValid() {
	    boolean allValid = true;
	
	    [%for (c in rule.conditions) { 
	       var CondClassName = c.name.replaceAll("[^a-zA-Z0-9]", "");
	    %]
	    [%=out.startPreserve("//", "//", "check_" + CondClassName, true)%]
	    Boolean [%=CondClassName%]IsValid = new [%=CondClassName%]().checkCondition(); //some parameter tbd//
	    // TODO: use correct parameter per condition
	    [%=out.stopPreserve()%]
	    
	    [% } %]
	    
	    [%for (c in rule.conditions) { 
	       var CondClassName = c.name.replaceAll("[^a-zA-Z0-9]", "");
	    %]
	    if (![%=CondClassName%]IsValid) {
	    	return false;
	    }
	
	    return true;
	    [% } %]
	}

    public float applyOffer() {
        float totalReduction = 0;
        [%for (o in rule.offers) { 
        	var OfferClassName = o.name.replaceAll("[^a-zA-Z0-9]", "");
        %]
        [%=out.startPreserve("//", "//", "" + OfferClassName, true)%]
        totalReduction += [%=OfferClassName%].[appropriate_method_for_offer];
        // TODO: use correct method per offer and apply specific logic
        [%=out.stopPreserve()%]
        [% } %]
        return totalReduction;
    }
    
    /**
     * Main logic to calculate the new price of the offer
     */
    public float useOfferRule() {
    	boolean offerValid = this.isOfferValid();
    	float totalReduction = 0;

    	if (offerValid) {
    		totalReduction = this.applyOffer();
    	}
    	
    	[%for (t in rule.triggers) {
	    	var targetName = t.target.name.replaceAll("[^a-zA-Z0-9]", "");
		%]
		    [%if (t.type.name == "ALWAYS") { %]
		    return totalReduction + new [%=targetName%](pricingContext).useOfferRule();
		    [%} else if (t.type.name == "IF_MATCH") { %]
		    if (offerValid) return totalReduction + new [%=targetName%](pricingContext).useOfferRule();
		    [%} else if (t.type.name == "IF_NOT_MATCH") { %]
		    if (!offerValid) return totalReduction + new [%=targetName%](pricingContext).useOfferRule();
		    [%} %]
		[% } %]
		return totalReduction;
    }
    
    public String getRuleName() {
    	return "[%=rule.name%]";
    }
}