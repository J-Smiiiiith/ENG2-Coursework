/**
 */
package uk.ac.york.cs.eng2.offers.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import uk.ac.york.cs.eng2.offers.util.OffersAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class OffersItemProviderAdapterFactory extends OffersAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public OffersItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.AllOffers} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AllOffersItemProvider allOffersItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.AllOffers}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAllOffersAdapter() {
		if (allOffersItemProvider == null) {
			allOffersItemProvider = new AllOffersItemProvider(this);
		}

		return allOffersItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.OfferRule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OfferRuleItemProvider offerRuleItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.OfferRule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOfferRuleAdapter() {
		if (offerRuleItemProvider == null) {
			offerRuleItemProvider = new OfferRuleItemProvider(this);
		}

		return offerRuleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.Category} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CategoryItemProvider categoryItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.Category}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCategoryAdapter() {
		if (categoryItemProvider == null) {
			categoryItemProvider = new CategoryItemProvider(this);
		}

		return categoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.SubCategory} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubCategoryItemProvider subCategoryItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.SubCategory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubCategoryAdapter() {
		if (subCategoryItemProvider == null) {
			subCategoryItemProvider = new SubCategoryItemProvider(this);
		}

		return subCategoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.Product} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductItemProvider productItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.Product}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductAdapter() {
		if (productItemProvider == null) {
			productItemProvider = new ProductItemProvider(this);
		}

		return productItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.Tag} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TagItemProvider tagItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.Tag}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTagAdapter() {
		if (tagItemProvider == null) {
			tagItemProvider = new TagItemProvider(this);
		}

		return tagItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.OfferPriceReduction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OfferPriceReductionItemProvider offerPriceReductionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.OfferPriceReduction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOfferPriceReductionAdapter() {
		if (offerPriceReductionItemProvider == null) {
			offerPriceReductionItemProvider = new OfferPriceReductionItemProvider(this);
		}

		return offerPriceReductionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.OfferFixedPrice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OfferFixedPriceItemProvider offerFixedPriceItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.OfferFixedPrice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOfferFixedPriceAdapter() {
		if (offerFixedPriceItemProvider == null) {
			offerFixedPriceItemProvider = new OfferFixedPriceItemProvider(this);
		}

		return offerFixedPriceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.OfferBuyXGetYFree} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OfferBuyXGetYFreeItemProvider offerBuyXGetYFreeItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.OfferBuyXGetYFree}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOfferBuyXGetYFreeAdapter() {
		if (offerBuyXGetYFreeItemProvider == null) {
			offerBuyXGetYFreeItemProvider = new OfferBuyXGetYFreeItemProvider(this);
		}

		return offerBuyXGetYFreeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.OfferXPoundsOff} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OfferXPoundsOffItemProvider offerXPoundsOffItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.OfferXPoundsOff}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOfferXPoundsOffAdapter() {
		if (offerXPoundsOffItemProvider == null) {
			offerXPoundsOffItemProvider = new OfferXPoundsOffItemProvider(this);
		}

		return offerXPoundsOffItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.OfferXPoundsOffOnDate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OfferXPoundsOffOnDateItemProvider offerXPoundsOffOnDateItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.OfferXPoundsOffOnDate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOfferXPoundsOffOnDateAdapter() {
		if (offerXPoundsOffOnDateItemProvider == null) {
			offerXPoundsOffOnDateItemProvider = new OfferXPoundsOffOnDateItemProvider(this);
		}

		return offerXPoundsOffOnDateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.OfferPriceReductionOnDate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OfferPriceReductionOnDateItemProvider offerPriceReductionOnDateItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.OfferPriceReductionOnDate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOfferPriceReductionOnDateAdapter() {
		if (offerPriceReductionOnDateItemProvider == null) {
			offerPriceReductionOnDateItemProvider = new OfferPriceReductionOnDateItemProvider(this);
		}

		return offerPriceReductionOnDateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.CheckCategoryCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CheckCategoryConditionItemProvider checkCategoryConditionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.CheckCategoryCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCheckCategoryConditionAdapter() {
		if (checkCategoryConditionItemProvider == null) {
			checkCategoryConditionItemProvider = new CheckCategoryConditionItemProvider(this);
		}

		return checkCategoryConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.CheckSubCategoryCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CheckSubCategoryConditionItemProvider checkSubCategoryConditionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.CheckSubCategoryCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCheckSubCategoryConditionAdapter() {
		if (checkSubCategoryConditionItemProvider == null) {
			checkSubCategoryConditionItemProvider = new CheckSubCategoryConditionItemProvider(this);
		}

		return checkSubCategoryConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.CheckProductCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CheckProductConditionItemProvider checkProductConditionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.CheckProductCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCheckProductConditionAdapter() {
		if (checkProductConditionItemProvider == null) {
			checkProductConditionItemProvider = new CheckProductConditionItemProvider(this);
		}

		return checkProductConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.CheckTagsCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CheckTagsConditionItemProvider checkTagsConditionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.CheckTagsCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCheckTagsConditionAdapter() {
		if (checkTagsConditionItemProvider == null) {
			checkTagsConditionItemProvider = new CheckTagsConditionItemProvider(this);
		}

		return checkTagsConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.MinPriceCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MinPriceConditionItemProvider minPriceConditionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.MinPriceCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMinPriceConditionAdapter() {
		if (minPriceConditionItemProvider == null) {
			minPriceConditionItemProvider = new MinPriceConditionItemProvider(this);
		}

		return minPriceConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.CheckQuantityCategoryCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CheckQuantityCategoryConditionItemProvider checkQuantityCategoryConditionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.CheckQuantityCategoryCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCheckQuantityCategoryConditionAdapter() {
		if (checkQuantityCategoryConditionItemProvider == null) {
			checkQuantityCategoryConditionItemProvider = new CheckQuantityCategoryConditionItemProvider(this);
		}

		return checkQuantityCategoryConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.CheckQuantitySubCategoryCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CheckQuantitySubCategoryConditionItemProvider checkQuantitySubCategoryConditionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.CheckQuantitySubCategoryCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCheckQuantitySubCategoryConditionAdapter() {
		if (checkQuantitySubCategoryConditionItemProvider == null) {
			checkQuantitySubCategoryConditionItemProvider = new CheckQuantitySubCategoryConditionItemProvider(this);
		}

		return checkQuantitySubCategoryConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.CheckQuantityProductCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CheckQuantityProductConditionItemProvider checkQuantityProductConditionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.CheckQuantityProductCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCheckQuantityProductConditionAdapter() {
		if (checkQuantityProductConditionItemProvider == null) {
			checkQuantityProductConditionItemProvider = new CheckQuantityProductConditionItemProvider(this);
		}

		return checkQuantityProductConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.york.cs.eng2.offers.Trigger} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TriggerItemProvider triggerItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.york.cs.eng2.offers.Trigger}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTriggerAdapter() {
		if (triggerItemProvider == null) {
			triggerItemProvider = new TriggerItemProvider(this);
		}

		return triggerItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (allOffersItemProvider != null) allOffersItemProvider.dispose();
		if (offerRuleItemProvider != null) offerRuleItemProvider.dispose();
		if (categoryItemProvider != null) categoryItemProvider.dispose();
		if (subCategoryItemProvider != null) subCategoryItemProvider.dispose();
		if (productItemProvider != null) productItemProvider.dispose();
		if (tagItemProvider != null) tagItemProvider.dispose();
		if (offerPriceReductionItemProvider != null) offerPriceReductionItemProvider.dispose();
		if (offerFixedPriceItemProvider != null) offerFixedPriceItemProvider.dispose();
		if (offerBuyXGetYFreeItemProvider != null) offerBuyXGetYFreeItemProvider.dispose();
		if (offerXPoundsOffItemProvider != null) offerXPoundsOffItemProvider.dispose();
		if (offerXPoundsOffOnDateItemProvider != null) offerXPoundsOffOnDateItemProvider.dispose();
		if (offerPriceReductionOnDateItemProvider != null) offerPriceReductionOnDateItemProvider.dispose();
		if (checkCategoryConditionItemProvider != null) checkCategoryConditionItemProvider.dispose();
		if (checkSubCategoryConditionItemProvider != null) checkSubCategoryConditionItemProvider.dispose();
		if (checkProductConditionItemProvider != null) checkProductConditionItemProvider.dispose();
		if (checkTagsConditionItemProvider != null) checkTagsConditionItemProvider.dispose();
		if (minPriceConditionItemProvider != null) minPriceConditionItemProvider.dispose();
		if (checkQuantityCategoryConditionItemProvider != null) checkQuantityCategoryConditionItemProvider.dispose();
		if (checkQuantitySubCategoryConditionItemProvider != null) checkQuantitySubCategoryConditionItemProvider.dispose();
		if (checkQuantityProductConditionItemProvider != null) checkQuantityProductConditionItemProvider.dispose();
		if (triggerItemProvider != null) triggerItemProvider.dispose();
	}

}
