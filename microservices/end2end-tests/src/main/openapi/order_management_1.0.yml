openapi: 3.0.1
info:
  title: order-management
  version: "0.0"
paths:
  /customers:
    get:
      tags:
        - Customers
      operationId: getCustomers
      responses:
        "200":
          description: getCustomers 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
    post:
      tags:
        - Customers
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerDTO"
        required: true
      responses:
        "200":
          description: createCustomer 200 response
  /customers/{id}:
    get:
      tags:
        - Customers
      operationId: getCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: getCustomer 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
    put:
      tags:
        - Customers
      operationId: updateCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerDTO"
        required: true
      responses:
        "200":
          description: updateCustomer 200 response
    delete:
      tags:
        - Customers
      operationId: deleteCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: deleteCustomer 200 response
  /order-items:
    get:
      tags:
        - Order Items
      operationId: getOrderItems
      responses:
        "200":
          description: getOrderItems 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderItem"
    post:
      tags:
        - Order Items
      operationId: createOrderItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderItemDTO"
        required: true
      responses:
        "200":
          description: createOrderItem 200 response
  /order-items/{id}:
    get:
      tags:
        - Order Items
      operationId: getOrderItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: getOrderItem 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderItem"
  /orders:
    get:
      tags:
        - Orders
      operationId: getOrders
      responses:
        "200":
          description: getOrders 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Orders"
    post:
      tags:
        - Orders
      operationId: createOrders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersCreateDTO"
        required: true
      responses:
        "200":
          description: createOrders 200 response
  /orders/{id}:
    get:
      tags:
        - Orders
      operationId: getOrder
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: getOrder 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orders"
    put:
      tags:
        - Orders
      operationId: updateOrders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersDTO"
        required: true
      responses:
        "200":
          description: updateOrders 200 response
    delete:
      tags:
        - Orders
      operationId: deleteOrders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: deleteOrders 200 response
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        email:
          type: string
        firstName:
          type: string
        familyName:
          type: string
    CustomerDTO:
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        familyName:
          type: string
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        productId:
          type: integer
          format: int64
        order:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/Orders"
        quantity:
          type: integer
          format: int32
        unitPrice:
          type: number
          format: float
    OrderItemDTO:
      type: object
      properties:
        productId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        orderId:
          $ref: "#/components/schemas/Orders"
    Orders:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        dateCreated:
          type: string
        address:
          type: string
        paid:
          type: boolean
        delivered:
          type: boolean
        totalAmount:
          type: number
          format: float
        customer:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/Customer"
    OrdersCreateDTO:
      type: object
      properties:
        address:
          type: string
        products:
          type: object
          additionalProperties:
            type: integer
            format: int32
        customerId:
          type: integer
          format: int64
    OrdersDTO:
      type: object
      properties:
        address:
          type: string
        paid:
          type: boolean
        delivered:
          type: boolean
        customerId:
          type: integer
          format: int64